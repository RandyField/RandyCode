using System;
using System.Collections.Generic;
using System.Drawing;
using System.Drawing.Imaging;
using System.Linq;
using System.Text;
using System.Web;
using System.Web.Mvc;
using ThoughtWorks.QRCode.Codec;
using ZXing;
using ZXing.QrCode;

namespace UI.Controllers
{
    public class CreateQrController : Controller
    {
        //
        // GET: /CreateQr/

        public ActionResult Index()
        {
            CreateQRCode();
            return View();
        }

        /// <summary>
        /// 生成二维码,保存成图片
        /// </summary>
        static void Generate1(string text)
        {
            BarcodeWriter writer = new BarcodeWriter();

            writer.Format = BarcodeFormat.QR_CODE;

            QrCodeEncodingOptions options = new QrCodeEncodingOptions();
            options.DisableECI = true;

            //设置内容编码
            options.CharacterSet = "UTF-8";

            //设置二维码的宽度和高度
            options.Width = 500;
            options.Height = 500;

            //设置二维码的边距,单位不是固定像素
            options.Margin = 1;

            writer.Options = options;
            //char test_qr_code[1024] = {0x80,0x01,0x69,0x24,0x01,0x01,0x00,0x00,0x01,0x12,0x27,0x10,0x00,0x01,0x12,0x90,0x00,0x00,0x04,0x04,0x04,0x00,0x33,0x02,0x7b,0xe3,0x88,0xfa,0x23,0x0f,0xfb,0xe6,0x67,0x7b,0x4c,0x27,0x7c,0xab,0x5b,0x29,
            //                            0x50,0xc2,0x8b,0xf3,0xca,0xec,0xa9,0x11,0x17,0xa3,0x8b,0x95,0x0f,0x23,0x26,0x48,0x70,0xd2,0x4c,0xbe,0x52,0xfb,0x03,0x51,0xbf,0xab,0x09,0x8b,0x3a,0x59,0xb7,0x25,0x3f,0xbc,0xa1,0x47,0x52,0x49,0xcd,0x56,
            //                            0xac,0xe9,0xa1,0x1e,0xb0,0x1e,0xc9,0x82,0x89,0x62,0xd1,0xd8,0x2f,0x43,0xa2,0xf7,0x3b,0x71,0xeb,0xd9,0x2a,0x00,0xb1,0xc0,0x63,0x42,0xa5,0x9b,0x01,0x00,0x85,0x07,0xe8,0x54,0xf8,0xdc,0x63,0xdd,0x72,0x82,
            //                            0x53,0x55,0x31,0x35,0x33,0x34,0x31,0x34,0x31,0x34,0x35,0x33,0x31,0x30,0x30,0x31,0x00,0x00,0x15,0x34,0x14,0x14,0x53,0x83,0x31,0x01,0x27,0x10,0x00,0x01,0x50,0x01,0x11,0x00,0x00,0x00,0x13,0x88,0x03,0x7e,
            //                            0x11,0x12,0x5c,0x8c,0x94,0x19,0x8d,0xdb,0xaf,0x35,0x40,0x4d,0x23,0xaf,0x06,0x73,0xe8,0x80,0xe9,0x4c,0xf7,0x29,0x7b,0x58,0x38,0xa7,0x0a,0x62,0xb2,0x41,0x52,0x5b,0x78,0xc9,0x09,0x02,0x58,0x20,0x00,0x00,
            //                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x16,0x2b,0xc5,0xfc,0xac,0xdf,0xb4,0xe1,0x3a,
            //                            0x55,0x28,0xee,0xa0,0xe2,0xaa,0x8c,0x98,0xd1,0xf9,0x7c,0x5f,0x9f,0xb0,0xf0,0xc5,0xe0,0xb4,0xbb,0x51,0x5a,0x64,0xcd,0x65,0x94,0x86,0x70,0x6c,0xee,0xf1,0xa7,0x4c,0x12,0x2a,0x03,0x8a,0xee,0x38,0xd1,0x12,
            //                            0x8f,0xa5,0x83,0xe1,0xc8,0x80,0x29,0x07,0x9e,0xee,0x6d,0x28,0x6c,0xdf,0x47,0x5b,0x74,0xd4,0x89,0x15,0x08,0x9f,0x44,0x45,0x66,0x63,0x77,0xf8,0xe0,0xec,0x26,0x98,0x02,0xcb,0x95,0x85,0x31,0x95,0x72,0xfa,
            //                            0x4a,0x97,0xe4,0xc1,0x51,0xcc,0x77,0x78,0x44,0x41,0x46,0xa1,0xf3,0x6c,0xb2,0x1c,0xfe,0xa2,0x34,0xee,0xe5,0x90,0xf7,0x1f,0x74,0xe5,0xb6,0xc2,0xf2,0x76,0x3b,0x20,0xdc,0x64,0x63,0x15,0xae,0x61,0x5e,0x5b,
            //                            0x92,0xbd,0xdf,0x7a};

            byte[] bts = new byte[]
            {
                0x80,0x01,0x69,0x24,0x01,0x01,0x00,0x00,0x01,0x12,0x27,0x10,0x00,0x01,0x12,0x90,0x00,0x00,0x04,0x04,0x04,0x00,0x33,0x02,0x7b,0xe3,0x88,0xfa,0x23,0x0f,0xfb,0xe6,0x67,0x7b,0x4c,0x27,0x7c,0xab,0x5b,0x29,
                                        0x50,0xc2,0x8b,0xf3,0xca,0xec,0xa9,0x11,0x17,0xa3,0x8b,0x95,0x0f,0x23,0x26,0x48,0x70,0xd2,0x4c,0xbe,0x52,0xfb,0x03,0x51,0xbf,0xab,0x09,0x8b,0x3a,0x59,0xb7,0x25,0x3f,0xbc,0xa1,0x47,0x52,0x49,0xcd,0x56,
                                        0xac,0xe9,0xa1,0x1e,0xb0,0x1e,0xc9,0x82,0x89,0x62,0xd1,0xd8,0x2f,0x43,0xa2,0xf7,0x3b,0x71,0xeb,0xd9,0x2a,0x00,0xb1,0xc0,0x63,0x42,0xa5,0x9b,0x01,0x00,0x85,0x07,0xe8,0x54,0xf8,0xdc,0x63,0xdd,0x72,0x82,
                                        0x53,0x55,0x31,0x35,0x33,0x34,0x31,0x34,0x31,0x34,0x35,0x33,0x31,0x30,0x30,0x31,0x00,0x00,0x15,0x34,0x14,0x14,0x53,0x83,0x31,0x01,0x27,0x10,0x00,0x01,0x50,0x01,0x11,0x00,0x00,0x00,0x13,0x88,0x03,0x7e,
                                        0x11,0x12,0x5c,0x8c,0x94,0x19,0x8d,0xdb,0xaf,0x35,0x40,0x4d,0x23,0xaf,0x06,0x73,0xe8,0x80,0xe9,0x4c,0xf7,0x29,0x7b,0x58,0x38,0xa7,0x0a,0x62,0xb2,0x41,0x52,0x5b,0x78,0xc9,0x09,0x02,0x58,0x20,0x00,0x00,
                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x16,0x2b,0xc5,0xfc,0xac,0xdf,0xb4,0xe1,0x3a,
                                        0x55,0x28,0xee,0xa0,0xe2,0xaa,0x8c,0x98,0xd1,0xf9,0x7c,0x5f,0x9f,0xb0,0xf0,0xc5,0xe0,0xb4,0xbb,0x51,0x5a,0x64,0xcd,0x65,0x94,0x86,0x70,0x6c,0xee,0xf1,0xa7,0x4c,0x12,0x2a,0x03,0x8a,0xee,0x38,0xd1,0x12,
                                        0x8f,0xa5,0x83,0xe1,0xc8,0x80,0x29,0x07,0x9e,0xee,0x6d,0x28,0x6c,0xdf,0x47,0x5b,0x74,0xd4,0x89,0x15,0x08,0x9f,0x44,0x45,0x66,0x63,0x77,0xf8,0xe0,0xec,0x26,0x98,0x02,0xcb,0x95,0x85,0x31,0x95,0x72,0xfa,
                                        0x4a,0x97,0xe4,0xc1,0x51,0xcc,0x77,0x78,0x44,0x41,0x46,0xa1,0xf3,0x6c,0xb2,0x1c,0xfe,0xa2,0x34,0xee,0xe5,0x90,0xf7,0x1f,0x74,0xe5,0xb6,0xc2,0xf2,0x76,0x3b,0x20,0xdc,0x64,0x63,0x15,0xae,0x61,0x5e,0x5b,
                                        0x92,0xbd,0xdf,0x7a
            };
            Bitmap map = writer.Write(text);
            //writer.Write()
            string filename = @"H:\桌面\截图\generate1.png";
            map.Save(filename, ImageFormat.Png);
            map.Dispose();
        }


        /// <summary>
        /// 生成二维码（中间不带LOGO）
        /// </summary>
        /// <param name="absoluteSave">保存的绝对路径</param>
        /// <param name="qrdata">要附加的内容</param>
        /// <returns></returns>
        public void CreateQRCode()
        {
            byte[] bts = new byte[]
                {
                    0x80,0x01,0x69,0x24,0x01,0x01,0x00,0x00,0x01,0x12,0x27,0x10,0x00,0x01,0x12,0x90,0x00,0x00,0x04,0x04,0x04,0x00,0x33,0x02,0x7b,0xe3,0x88,0xfa,0x23,0x0f,0xfb,0xe6,0x67,0x7b,0x4c,0x27,0x7c,0xab,0x5b,0x29,
                                            0x50,0xc2,0x8b,0xf3,0xca,0xec,0xa9,0x11,0x17,0xa3,0x8b,0x95,0x0f,0x23,0x26,0x48,0x70,0xd2,0x4c,0xbe,0x52,0xfb,0x03,0x51,0xbf,0xab,0x09,0x8b,0x3a,0x59,0xb7,0x25,0x3f,0xbc,0xa1,0x47,0x52,0x49,0xcd,0x56,
                                            0xac,0xe9,0xa1,0x1e,0xb0,0x1e,0xc9,0x82,0x89,0x62,0xd1,0xd8,0x2f,0x43,0xa2,0xf7,0x3b,0x71,0xeb,0xd9,0x2a,0x00,0xb1,0xc0,0x63,0x42,0xa5,0x9b,0x01,0x00,0x85,0x07,0xe8,0x54,0xf8,0xdc,0x63,0xdd,0x72,0x82,
                                            0x53,0x55,0x31,0x35,0x33,0x34,0x31,0x34,0x31,0x34,0x35,0x33,0x31,0x30,0x30,0x31,0x00,0x00,0x15,0x34,0x14,0x14,0x53,0x83,0x31,0x01,0x27,0x10,0x00,0x01,0x50,0x01,0x11,0x00,0x00,0x00,0x13,0x88,0x03,0x7e,
                                            0x11,0x12,0x5c,0x8c,0x94,0x19,0x8d,0xdb,0xaf,0x35,0x40,0x4d,0x23,0xaf,0x06,0x73,0xe8,0x80,0xe9,0x4c,0xf7,0x29,0x7b,0x58,0x38,0xa7,0x0a,0x62,0xb2,0x41,0x52,0x5b,0x78,0xc9,0x09,0x02,0x58,0x20,0x00,0x00,
                                            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x15,0x16,0x2b,0xc5,0xfc,0xac,0xdf,0xb4,0xe1,0x3a,
                                            0x55,0x28,0xee,0xa0,0xe2,0xaa,0x8c,0x98,0xd1,0xf9,0x7c,0x5f,0x9f,0xb0,0xf0,0xc5,0xe0,0xb4,0xbb,0x51,0x5a,0x64,0xcd,0x65,0x94,0x86,0x70,0x6c,0xee,0xf1,0xa7,0x4c,0x12,0x2a,0x03,0x8a,0xee,0x38,0xd1,0x12,
                                            0x8f,0xa5,0x83,0xe1,0xc8,0x80,0x29,0x07,0x9e,0xee,0x6d,0x28,0x6c,0xdf,0x47,0x5b,0x74,0xd4,0x89,0x15,0x08,0x9f,0x44,0x45,0x66,0x63,0x77,0xf8,0xe0,0xec,0x26,0x98,0x02,0xcb,0x95,0x85,0x31,0x95,0x72,0xfa,
                                            0x4a,0x97,0xe4,0xc1,0x51,0xcc,0x77,0x78,0x44,0x41,0x46,0xa1,0xf3,0x6c,0xb2,0x1c,0xfe,0xa2,0x34,0xee,0xe5,0x90,0xf7,0x1f,0x74,0xe5,0xb6,0xc2,0xf2,0x76,0x3b,0x20,0xdc,0x64,0x63,0x15,0xae,0x61,0x5e,0x5b,
                                            0x92,0xbd,0xdf,0x7a
                };
            try
            {
                QRCodeEncoder encoder = new QRCodeEncoder();
                encoder.QRCodeEncodeMode = QRCodeEncoder.ENCODE_MODE.BYTE;//编码方式(注意：BYTE能支持中文，ALPHA_NUMERIC扫描出来的都是数字)
                encoder.QRCodeScale = 4;//大小(值越大生成的二维码图片像素越高)
                encoder.QRCodeVersion = 0;//版本(注意：设置为0主要是防止编码的字符串太长时发生错误)
                encoder.QRCodeErrorCorrect = QRCodeEncoder.ERROR_CORRECTION.H;//错误效验、错误更正(有4个等级)
                encoder.QRCodeBackgroundColor = Color.White;
                encoder.QRCodeForegroundColor = Color.Black;
                //System.Drawing.Image image = encoder.Encode(System.Text.Encoding.Default.GetString(bts), Encoding.UTF8);
                //System.IO.Directory.CreateDirectory(absoluteSave);
                System.Drawing.Image image = encoder.Encode("Randy", Encoding.UTF8);
                image.Save(@"F:\\二维码.png", ImageFormat.Png);
                image.Dispose();
            }
            catch (Exception e)
            {
                //一些操作
            }
        }
    }
}
